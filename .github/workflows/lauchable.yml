# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Launchable

on:
  push:
    branches: [ launchable ]
  pull_request:
    branches: [ launchable ]

env:
  LAUNCHABLE_TOKEN: ${{ secrets.LAUNCHABLE_TOKEN }}
  LAUNCHABLE_DEBUG: 1
  LAUNCHABLE_REPORT_ERROR: 1

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby-version: ['2.6', '2.7', '3.0', '3.1', 'head', 'debug']

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Ruby
    # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
    # change this to (see https://github.com/ruby/setup-ruby#versioning):
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '8'
    - name: Install launchable command
      run: |
        pip install launchable
    - name: verify
      run: launchable verify
    - name: record build
      run: launchable record build --name ${GITHUB_RUN_ID}
    - name: Run tests
      run: |
        bundle exec rake clobber
        bundle exec rake compile
        TESTOPTS="--runner=junitxml --junitxml-output-file=protocol.xml" bundle exec rake test_protocol
    - name: launchable record tests
      run: launchable record tests file *.xml
      if: always()
  close-pr:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
    - name: Close Pull Request
      if: contains(github.head_ref, 'create-pull-request/')
      run: gh pr close "$PR_URL"
      env:
        PR_URL: ${{github.event.pull_request.html_url}}
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
